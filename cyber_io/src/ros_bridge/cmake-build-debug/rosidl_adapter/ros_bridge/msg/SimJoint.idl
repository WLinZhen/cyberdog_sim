// generated from rosidl_adapter/resource/msg.idl.em
// with input from ros_bridge/msg/SimJoint.msg
// generated code does not contain a copyright notice


module ros_bridge {
  module msg {
    @verbatim (language="comment", text=
      " SimJointq.msg")
    struct SimJoint {
      @verbatim (language="comment", text=
        " 关节角度")
      double q_abad_fl;

      @verbatim (language="comment", text=
        " 关节角度")
      double q_abad_fr;

      @verbatim (language="comment", text=
        " 关节角度")
      double q_abad_rl;

      @verbatim (language="comment", text=
        " 关节角度")
      double q_abad_rr;

      @verbatim (language="comment", text=
        " 关节角度")
      double q_hip_fl;

      @verbatim (language="comment", text=
        " 关节角度")
      double q_hip_fr;

      @verbatim (language="comment", text=
        " 关节角度")
      double q_hip_rl;

      @verbatim (language="comment", text=
        " 关节角度")
      double q_hip_rr;

      @verbatim (language="comment", text=
        " 关节角度")
      double q_knee_fl;

      @verbatim (language="comment", text=
        " 关节角度")
      double q_knee_fr;

      @verbatim (language="comment", text=
        " 关节角度")
      double q_knee_rl;

      @verbatim (language="comment", text=
        " 关节角度")
      double q_knee_rr;

      @verbatim (language="comment", text=
        " 关节速度")
      double qd_abad_fl;

      @verbatim (language="comment", text=
        " 关节速度")
      double qd_abad_fr;

      @verbatim (language="comment", text=
        " 关节速度")
      double qd_abad_rl;

      @verbatim (language="comment", text=
        " 关节速度")
      double qd_abad_rr;

      @verbatim (language="comment", text=
        " 关节速度")
      double qd_hip_fl;

      @verbatim (language="comment", text=
        " 关节速度")
      double qd_hip_fr;

      @verbatim (language="comment", text=
        " 关节速度")
      double qd_hip_rl;

      @verbatim (language="comment", text=
        " 关节速度")
      double qd_hip_rr;

      @verbatim (language="comment", text=
        " 关节速度")
      double qd_knee_fl;

      @verbatim (language="comment", text=
        " 关节速度")
      double qd_knee_fr;

      @verbatim (language="comment", text=
        " 关节速度")
      double qd_knee_rl;

      @verbatim (language="comment", text=
        " 关节速度")
      double qd_knee_rr;

      @verbatim (language="comment", text=
        " 关节力矩")
      double tau_abad_fl;

      @verbatim (language="comment", text=
        " 关节力矩")
      double tau_abad_fr;

      @verbatim (language="comment", text=
        " 关节力矩")
      double tau_abad_rl;

      @verbatim (language="comment", text=
        " 关节力矩")
      double tau_abad_rr;

      @verbatim (language="comment", text=
        " 关节力矩")
      double tau_hip_fl;

      @verbatim (language="comment", text=
        " 关节力矩")
      double tau_hip_fr;

      @verbatim (language="comment", text=
        " 关节力矩")
      double tau_hip_rl;

      @verbatim (language="comment", text=
        " 关节力矩")
      double tau_hip_rr;

      @verbatim (language="comment", text=
        " 关节力矩")
      double tau_knee_fl;

      @verbatim (language="comment", text=
        " 关节力矩")
      double tau_knee_fr;

      @verbatim (language="comment", text=
        " 关节力矩")
      double tau_knee_rl;

      @verbatim (language="comment", text=
        " 关节力矩")
      double tau_knee_rr;
    };
  };
};
